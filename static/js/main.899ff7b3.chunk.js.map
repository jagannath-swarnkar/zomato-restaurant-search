{"version":3,"sources":["Components/Header.js","Components/Zomato.js","Components/SearchByCity.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","fontSize","fontWeight","fontStyle","title","Header","props","classes","className","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","currentCity","Button","config","headers","Zomato","getLocationCity","cityName","city","console","log","Axios","get","then","res","data","location_suggestions","id","catch","err","getCollactions","e","promise1","Promise","resolve","reject","state","collections","setState","cityData","keyPressHandler","key","this","map","i","Card","src","collection","image_url","alt","Divider","orientation","TextField","label","fullWidth","autoFocus","value","onChange","target","onKeyPress","maindata","Component","SearchByCity","CityRestaurants","text","restaurants","restaurant","placeholder","r","featured_image","style","display","establishment","href","url","name","location","locality_verbose","user_rating","rating_text","background","aggregate_rating","votes","address","slice","cuisines","average_cost_for_two","timings","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.899ff7b3.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n    fontSize: \"30px\",\n    fontWeight: \"900\",\n    fontStyle: \"italic\"\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            {\"zomato\"}\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.currentCity || \"Delhi\"}\n          </Typography>\n          <Button color=\"inherit\">Collections</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Card, TextField, Divider, Typography } from \"@material-ui/core\";\nimport \"./Zomato.css\";\nimport Header from \"./Header\";\n\nconst config = { headers: { \"user-key\": \"d58b0f5939e34d258dd866d357453db3\" } };\n\nexport class Zomato extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cityData: null,\n      cityName: \"\"\n    };\n  }\n\n  getLocationCity = cityName => {\n    var city = cityName || \"delhi\";\n    console.log(city);\n    Axios.get(`https://developers.zomato.com/api/v2.1/cities?q=${city}`, config)\n      .then(res => {\n        console.log(\"res\", res.data.location_suggestions[0].id);\n        return res.data.location_suggestions[0].id;\n      })\n      .catch(err => {\n        console.log(\"error \", err);\n      });\n  };\n\n  getCollactions = e => {\n    // if (e.key === \"Enter\") {\n    const promise1 = new Promise((resolve, reject) => {\n      var city = this.state.cityName || \"delhi\";\n      console.log(\"city :\", city);\n      Axios.get(\n        `https://developers.zomato.com/api/v2.1/cities?q=${city}`,\n        config\n      )\n        .then(res => {\n          console.log(\"res\", res.data.location_suggestions[0].id);\n          resolve(res.data.location_suggestions[0].id);\n        })\n        .catch(err => {\n          console.log(\"error \", err);\n        });\n    });\n\n    // getting the city_id from the promise and store in another variable\n    promise1.then(id => {\n      Axios.get(\n        `https://developers.zomato.com/api/v2.1/collections?city_id=${id}`,\n        config\n      )\n        .then(res => {\n          console.log(res.data.collections);\n          this.setState({ cityData: res.data.collections });\n        })\n        .catch(err => {\n          console.log(\"error \", err);\n        });\n    });\n\n    promise1.catch(err => console.log(\"err\", err));\n    // }\n  };\n  componentDidMount() {\n    this.getCollactions(\"\");\n  }\n  keyPressHandler = e => {\n    if (e.key === \"Enter\") {\n      this.getCollactions(e);\n      this.setState({ cityName: \"\" });\n    }\n  };\n\n  render() {\n    if (this.state.cityData) {\n      return this.state.cityData.map((e, i) => {\n        return (\n          <Card className=\"card\">\n            <div className=\"card-div-1\">\n              <div className=\"img-div\">\n                <img src={e.collection.image_url} alt=\"img\" className=\"image\" />\n              </div>\n              <Divider orientation=\"vertical\" />\n              <div className=\"des-div\">\n                <Typography color=\"secondary\">\n                  <b>{e.collection.title}</b>\n                </Typography>\n              </div>\n            </div>\n            <Divider />\n            <div>hello</div>\n          </Card>\n        );\n      });\n    }\n    return (\n      <div>\n        <Header />\n        <Card className=\"card_search\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"City Name\"\n            fullWidth\n            autoFocus\n            value={this.state.cityName}\n            onChange={e => {\n              this.setState({ cityName: e.target.value });\n            }}\n            onKeyPress={this.keyPressHandler}\n          />\n        </Card>\n        {this.maindata || \"Please wait data is loading\"}\n      </div>\n    );\n  }\n}\n\nexport default Zomato;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport {\n  Card,\n  TextField,\n  Divider,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport \"./Zomato.css\";\nimport Header from \"./Header\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst config = { headers: { \"user-key\": \"d58b0f5939e34d258dd866d357453db3\" } };\n\nexport default class SearchByCity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentCity: \"delhi\",\n      text: \"\",\n      restaurants: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setState({ text: \"delhi\" });\n    this.CityRestaurants();\n    this.setState({ text: \"\" });\n  }\n\n  CityRestaurants = () => {\n    this.setState({ currentCity: this.state.text });\n    var city = this.state.text;\n    Axios.get(\n      `https://developers.zomato.com/api/v2.1/search?entity_type=city&q=${city}`,\n      config\n    )\n      .then(res => {\n        console.log(\"res\", res.data.restaurants[0].restaurant);\n        this.setState({ text: \"\", restaurants: res.data.restaurants });\n      })\n      .catch(err => {\n        console.log(\"error \", err);\n      });\n  };\n\n  keyPressHandler = e => {\n    if (e.key === \"Enter\") {\n      this.CityRestaurants();\n    }\n  };\n\n  render() {\n    if (this.state.restaurants) {\n      return (\n        <div>\n          <Header currentCity={this.state.currentCity} />\n          <Card className=\"card_search\">\n            <div>\n              <SearchIcon className=\"search_icon\" />\n            </div>\n            <TextField\n              id=\"standard-basic\"\n              placeholder=\"Search by city...\"\n              fullWidth\n              autoFocus\n              value={this.state.text}\n              onChange={e => {\n                this.setState({ text: e.target.value });\n              }}\n              onKeyPress={this.keyPressHandler}\n            />\n          </Card>\n          {this.state.restaurants.map((r, i) => {\n            return (\n              <Card key={i} className=\"card\">\n                <div className=\"card-div-1\">\n                  <div className=\"img-div\">\n                    <img\n                      src={r.restaurant.featured_image}\n                      alt=\"img\"\n                      className=\"image\"\n                    />\n                  </div>\n                  <div className=\"des-div\">\n                    <div style={{ display: \"flex\" }}>\n                      <div style={{ flexGrow: 9 }}>\n                        <Typography className=\"in-collection\">\n                          {r.restaurant.establishment}\n                        </Typography>\n                        <a\n                          className=\"res_name\"\n                          href={r.restaurant.url}\n                          target=\"_blank\"\n                        >\n                          {r.restaurant.name}\n                        </a>\n                        <Typography className=\"add-1\">\n                          <b>{r.restaurant.location.locality_verbose}</b>\n                        </Typography>\n                      </div>\n                      <div>\n                        <Button\n                          title={r.restaurant.user_rating.rating_text}\n                          style={{\n                            background: \"forestgreen\",\n                            color: \"white\",\n                            fontSize: \"20px\",\n                            fontWeight: \"bold\"\n                          }}\n                        >\n                          {r.restaurant.user_rating.aggregate_rating}\n                        </Button>\n                        <Typography className=\"votes\">\n                          {r.restaurant.user_rating.votes} votes\n                        </Typography>\n                      </div>\n                    </div>\n                    <br />\n                    <Typography className=\"add-2\">\n                      {r.restaurant.location.address.slice(0, 54)} ...\n                    </Typography>\n                  </div>\n                </div>\n                <Divider />\n                <div className=\"card-div-2\">\n                  <div className=\"card-div-2-a\">\n                    <Typography>CUSINE :</Typography>\n                    <Typography>COST FOR TWO:</Typography>\n                    <Typography>HOURS:</Typography>\n                  </div>\n                  <div className=\"card-div-2-b\">\n                    <Typography>{r.restaurant.cuisines}</Typography>\n                    <Typography>\n                      <img src=\"https://img.icons8.com/material-sharp/15/000000/rupee.png\" />\n                      {r.restaurant.average_cost_for_two}\n                    </Typography>\n                    <Typography>{r.restaurant.timings}</Typography>\n                  </div>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Header />\n        <Card className=\"card_search\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"City Name\"\n            fullWidth\n            autoFocus\n            value={this.state.text}\n            onChange={e => {\n              this.setState({ text: e.target.value });\n            }}\n            onKeyPress={this.keyPressHandler}\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Zomato from \"./Components/Zomato\";\nimport SearchByCity from \"./Components/SearchByCity\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={SearchByCity} />\n        <Route path=\"/collections\" exact component={Zomato} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}